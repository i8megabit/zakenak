{{- if .Values.devicePlugin.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-device-plugin-daemonset
  namespace: {{ .Values.release.namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: nvidia-device-plugin
spec:
  selector:
    matchLabels:
      name: nvidia-device-plugin-ds
  template:
    metadata:
      labels:
        name: nvidia-device-plugin-ds
    spec:
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      priorityClassName: system-node-critical
      containers:
      - name: nvidia-device-plugin-ctr
        image: "{{ .Values.devicePlugin.image.repository }}:{{ .Values.devicePlugin.image.tag }}"
        imagePullPolicy: {{ .Values.devicePlugin.image.pullPolicy }}
        args:
        - "--mig-strategy={{ .Values.devicePlugin.args.migStrategy }}"
        - "--fail-on-init-error={{ .Values.devicePlugin.args.failOnInitError }}"
        - "--device-id-strategy={{ .Values.devicePlugin.args.deviceIdStrategy }}"
        - "--pass-device-specs={{ .Values.devicePlugin.args.passDeviceSpecs }}"
        env:
        {{- with .Values.devicePlugin.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        securityContext:
          privileged: true
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
          - name: dev
            mountPath: /dev
          - name: nvidia-drv
            mountPath: /usr/local/nvidia
            readOnly: true
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: dev
          hostPath:
            path: /dev
        - name: nvidia-drv
          hostPath:
            path: /usr/lib/wsl/lib
{{- end }}



